name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test-pypi:
        description: 'Publish to Test PyPI instead'
        required: false
        type: boolean
        default: false

jobs:
  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/txmd/
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3

      - name: Verify version matches tag
        if: github.event_name == 'release'
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          POETRY_VERSION=$(poetry version -s)
          if [ "$TAG_VERSION" != "$POETRY_VERSION" ]; then
            echo "Error: Tag version does not match pyproject.toml"
            exit 1
          fi
          echo "Version check passed: $POETRY_VERSION"

      - name: Build package
        run: poetry build

      - name: Publish to Test PyPI
        if: inputs.test-pypi == true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      - name: Publish to PyPI
        if: github.event_name == 'release' && inputs.test-pypi != true
        uses: pypa/gh-action-pypi-publish@release/v1
